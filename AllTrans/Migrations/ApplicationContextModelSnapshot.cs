// <auto-generated />
using System;
using AllTrans.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AllTrans.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("AllTrans.Model.FavoriteTransport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("routeid")
                        .HasColumnType("int");

                    b.Property<int>("stopid")
                        .HasColumnType("int");

                    b.Property<int>("transid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FavoriteTransport");
                });

            modelBuilder.Entity("AllTrans.Model.Stop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("AllTrans.Model.StopRoute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("quenum")
                        .HasColumnType("int");

                    b.Property<int>("routeid")
                        .HasColumnType("int");

                    b.Property<int>("stopid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("StopsRoute");
                });

            modelBuilder.Entity("AllTrans.Model.StopTime", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("stoprouteid")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("timeval")
                        .HasColumnType("time");

                    b.HasKey("id");

                    b.ToTable("StopsTime");
                });

            modelBuilder.Entity("AllTrans.Model.TransRoute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TransRoute");
                });

            modelBuilder.Entity("AllTrans.Model.Transport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<string>("trastype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("AllTrans.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usertype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uslogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uspass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
